[{"path":"https://davidgohel.github.io/gdtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Gohel. Author, maintainer. Hadley Wickham. Author. Lionel Henry. Author. Jeroen Ooms. Author. Yixuan Qiu. Contributor. R Core Team. Copyright holder.           Cairo code X11 device ArData. Copyright holder. RStudio. Copyright holder.","code":""},{"path":"https://davidgohel.github.io/gdtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gohel D, Wickham H, Henry L, Ooms J (2024). gdtools: Utilities Graphical Rendering Fonts Management. R package version 0.4.0, https://davidgohel.github.io/gdtools/.","code":"@Manual{,   title = {gdtools: Utilities for Graphical Rendering and Fonts Management},   author = {David Gohel and Hadley Wickham and Lionel Henry and Jeroen Ooms},   year = {2024},   note = {R package version 0.4.0},   url = {https://davidgohel.github.io/gdtools/}, }"},{"path":"https://davidgohel.github.io/gdtools/index.html","id":"gdtools","dir":"","previous_headings":"","what":"Utilities for Graphical Rendering and Fonts Management","title":"Utilities for Graphical Rendering and Fonts Management","text":"package gdtools provides functionalities get font metrics generate base64 encoded string raster matrix. used package ‘flextable’ ‘rvg’ allow font metric calculation can also used compute exact size text specific font options (size, bold, italic). Another set functions provided support collection fonts ‘Google Fonts’ cache. use simple within ‘R Markdown’ documents ‘shiny’ applications also graphic productions generated ‘ggiraph’, ‘ragg’ ‘svglite’ packages tabular productions ‘flextable’ package. need ‘Google Font’ installed machine, can use install_gfont_script(). run ./firafont.sh.","code":"library(gdtools) str_extents(c(\"a string\", \"a longer string\"),    fontsize = 24, bold = TRUE, italic = TRUE) #>           [,1]     [,2] #> [1,]  86.68359 22.60547 #> [2,] 166.68750 22.60547 # Download to a user cache and register the font with systemfonts register_gfont(family = \"Open Sans\") install_gfont_script(\"Fira Sans\", file = \"firafont.sh\")"},{"path":"https://davidgohel.github.io/gdtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for Graphical Rendering and Fonts Management","text":"can install released version gdtools CRAN : development version GitHub :","code":"install.packages(\"gdtools\") # install.packages(\"remotes\") remotes::install_github(\"davidgohel/gdtools\")"},{"path":"https://davidgohel.github.io/gdtools/reference/addGFontHtmlDependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a font in Shiny or Markdown — addGFontHtmlDependency","title":"Use a font in Shiny or Markdown — addGFontHtmlDependency","text":"Add empty HTML element attached 'HTML Dependency' containing css font files font available HTML page. Multiple families supported. htmlDependency defined function gfontHtmlDependency().","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/addGFontHtmlDependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a font in Shiny or Markdown — addGFontHtmlDependency","text":"","code":"addGFontHtmlDependency(family = \"Open Sans\", subset = c(\"latin\", \"latin-ext\"))"},{"path":"https://davidgohel.github.io/gdtools/reference/addGFontHtmlDependency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a font in Shiny or Markdown — addGFontHtmlDependency","text":"family family name 'Google Fonts', example, \"Open Sans\", \"Roboto\", \"Fira Code\" \"Fira Sans Condensed\". Complete list available following command:   subset font subset, character vector, defaults \"latin\" \"latin-ext\" can contains values \"greek\", \"emoji\", \"chinese-traditional\", Run following code get complete list:","code":"gfonts::get_all_fonts()$family |>   unlist() |>   unique() |>   sort() gfonts::get_all_fonts()$subsets |> unlist() |> unique() |> sort()"},{"path":"https://davidgohel.github.io/gdtools/reference/addGFontHtmlDependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a font in Shiny or Markdown — addGFontHtmlDependency","text":"HTML object","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/addGFontHtmlDependency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use a font in Shiny or Markdown — addGFontHtmlDependency","text":"allows users use fonts 'Google Fonts' HTML page generated 'shiny' 'R Markdown'. first request, font files downloaded stored cache user's machine, thus avoiding many useless downloads allowing work fonts afterwards without Internet connection, docker image example. See fonts_cache_dir(). server delivering font files busy. one second pause added download respect server's limits. time can set option GFONTS_DOWNLOAD_SLEEPTIME must number seconds.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/addGFontHtmlDependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a font in Shiny or Markdown — addGFontHtmlDependency","text":"","code":"if (FALSE) { # \\dontrun{ if (check_gfonts()) {   dummy_setup()   addGFontHtmlDependency(family = \"Open Sans\") } } # }"},{"path":"https://davidgohel.github.io/gdtools/reference/check_gfonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the operability of 'gfonts' — check_gfonts","title":"Checks the operability of 'gfonts' — check_gfonts","text":"Checks 'gfonts' installed can used. Packages 'curl' 'gfonts' must installed internet connectivity must active.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/check_gfonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the operability of 'gfonts' — check_gfonts","text":"","code":"check_gfonts(errors = FALSE)"},{"path":"https://davidgohel.github.io/gdtools/reference/check_gfonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the operability of 'gfonts' — check_gfonts","text":"errors TRUE, function triggering errors condition satisfied.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/check_gfonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the operability of 'gfonts' — check_gfonts","text":"TRUE FALSE","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/dummy_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy 'Google Fonts' cache — dummy_setup","title":"dummy 'Google Fonts' cache — dummy_setup","text":"dummy 'Google Fonts' cache used examples.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/dummy_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy 'Google Fonts' cache — dummy_setup","text":"","code":"dummy_setup()"},{"path":"https://davidgohel.github.io/gdtools/reference/font_family_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if font family exists. — font_family_exists","title":"Check if font family exists. — font_family_exists","text":"Check font family exists system fonts.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/font_family_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if font family exists. — font_family_exists","text":"","code":"font_family_exists(font_family = \"sans\")"},{"path":"https://davidgohel.github.io/gdtools/reference/font_family_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if font family exists. — font_family_exists","text":"font_family font family name (case sensitive)","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/font_family_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if font family exists. — font_family_exists","text":"logical value","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/font_family_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if font family exists. — font_family_exists","text":"","code":"font_family_exists(\"sans\") #> [1] FALSE font_family_exists(\"Arial\") #> [1] FALSE font_family_exists(\"Courier\") #> [1] FALSE"},{"path":"https://davidgohel.github.io/gdtools/reference/fontconfig_reinit.html","id":null,"dir":"Reference","previous_headings":"","what":"reload Fontconfig configuration — fontconfig_reinit","title":"reload Fontconfig configuration — fontconfig_reinit","text":"function can used make fontconfig reload font configuration files.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/fontconfig_reinit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reload Fontconfig configuration — fontconfig_reinit","text":"","code":"fontconfig_reinit()"},{"path":"https://davidgohel.github.io/gdtools/reference/fontconfig_reinit.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"reload Fontconfig configuration — fontconfig_reinit","text":"Fontconfig used anymore function deprecated next release.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/fontconfig_reinit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"reload Fontconfig configuration — fontconfig_reinit","text":"Paul Murrell","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/fonts_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"manage font working directory — fonts_cache_dir","title":"manage font working directory — fonts_cache_dir","text":"Initialize remove font directory used store downloaded font files. directory managed R function R_user_dir() can also defined non-user location setting ENV variable GDTOOLS_CACHE_DIR setting R option GDTOOLS_CACHE_DIR. value can read fonts_cache_dir() function. directory can deleted rm_fonts_cache() created init_fonts_cache().","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/fonts_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"manage font working directory — fonts_cache_dir","text":"","code":"fonts_cache_dir()  rm_fonts_cache()  init_fonts_cache()"},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/fonts_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"manage font working directory — fonts_cache_dir","text":"","code":"fonts_cache_dir() #> [1] \"/home/runner/.local/share/R/gdtools\"  options(GDTOOLS_CACHE_DIR = tempdir()) fonts_cache_dir() #> [1] \"/tmp/RtmpEKA4mq\" options(GDTOOLS_CACHE_DIR = NULL)  Sys.setenv(GDTOOLS_CACHE_DIR = tempdir()) fonts_cache_dir() #> [1] \"/tmp/RtmpEKA4mq\" Sys.setenv(GDTOOLS_CACHE_DIR = \"\")    init_fonts_cache() #> [1] \"/home/runner/.local/share/R/gdtools\" dir.exists(fonts_cache_dir()) #> [1] TRUE  rm_fonts_cache() dir.exists(fonts_cache_dir()) #> [1] FALSE"},{"path":"https://davidgohel.github.io/gdtools/reference/gfontHtmlDependency.html","id":null,"dir":"Reference","previous_headings":"","what":"'Google Font' HTML dependency — gfontHtmlDependency","title":"'Google Font' HTML dependency — gfontHtmlDependency","text":"Create HTML dependency ready used 'Shiny' 'R Markdown'.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/gfontHtmlDependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Google Font' HTML dependency — gfontHtmlDependency","text":"","code":"gfontHtmlDependency(family = \"Open Sans\", subset = c(\"latin\", \"latin-ext\"))"},{"path":"https://davidgohel.github.io/gdtools/reference/gfontHtmlDependency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'Google Font' HTML dependency — gfontHtmlDependency","text":"family family name 'Google Fonts', example, \"Open Sans\", \"Roboto\", \"Fira Code\" \"Fira Sans Condensed\". Complete list available following command:   subset font subset, character vector, defaults \"latin\" \"latin-ext\" can contains values \"greek\", \"emoji\", \"chinese-traditional\", Run following code get complete list:","code":"gfonts::get_all_fonts()$family |>   unlist() |>   unique() |>   sort() gfonts::get_all_fonts()$subsets |> unlist() |> unique() |> sort()"},{"path":"https://davidgohel.github.io/gdtools/reference/gfontHtmlDependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'Google Font' HTML dependency — gfontHtmlDependency","text":"object defined htmltools::htmlDependency().","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/gfontHtmlDependency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'Google Font' HTML dependency — gfontHtmlDependency","text":"allows users use fonts 'Google Fonts' HTML page generated 'shiny' 'R Markdown'. first request, font files downloaded stored cache user's machine, thus avoiding many useless downloads allowing work fonts afterwards without Internet connection, docker image example. See fonts_cache_dir(). server delivering font files busy. one second pause added download respect server's limits. time can set option GFONTS_DOWNLOAD_SLEEPTIME must number seconds.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/gfontHtmlDependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'Google Font' HTML dependency — gfontHtmlDependency","text":"","code":"if (FALSE) { # \\dontrun{ if (check_gfonts()) {   dummy_setup()   gfontHtmlDependency(family = \"Open Sans\") } } # }"},{"path":"https://davidgohel.github.io/gdtools/reference/glyphs_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate glyph entries — glyphs_match","title":"Validate glyph entries — glyphs_match","text":"Determines strings contain glyphs part font.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/glyphs_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate glyph entries — glyphs_match","text":"","code":"glyphs_match(x, fontname = \"sans\", bold = FALSE, italic = FALSE, fontfile = \"\")"},{"path":"https://davidgohel.github.io/gdtools/reference/glyphs_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate glyph entries — glyphs_match","text":"x Character vector strings fontname Font name bold, italic text bold/italic? fontfile Font file","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/glyphs_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate glyph entries — glyphs_match","text":"logical vector, character element containing least glyph can matched font table, FALSE returned.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/glyphs_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate glyph entries — glyphs_match","text":"","code":"glyphs_match(letters) #>  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #> [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE glyphs_match(\"\\u265E\", bold = TRUE) #> [1] TRUE"},{"path":"https://davidgohel.github.io/gdtools/reference/install_gfont_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Shell command to install a font from 'Google Fonts' — install_gfont_script","title":"Shell command to install a font from 'Google Fonts' — install_gfont_script","text":"Create string containing system command execute font 'Google Fonts' installed system. execution may require root permissions, dockerfile example.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/install_gfont_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shell command to install a font from 'Google Fonts' — install_gfont_script","text":"","code":"install_gfont_script(   family = \"Open Sans\",   subset = c(\"latin\", \"latin-ext\"),   platform = c(\"debian\", \"windows\", \"macos\"),   file = NULL )"},{"path":"https://davidgohel.github.io/gdtools/reference/install_gfont_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shell command to install a font from 'Google Fonts' — install_gfont_script","text":"family family name 'Google Fonts', example, \"Open Sans\", \"Roboto\", \"Fira Code\" \"Fira Sans Condensed\". Complete list available following command:   subset font subset, character vector, defaults \"latin\" \"latin-ext\" can contains values \"greek\", \"emoji\", \"chinese-traditional\", Run following code get complete list:   platform \"debian\" \"windows\" \"macos\" supported. file script file generate, optional. parameter specified, file generated ready execution. platform Windows, administration rights required run script.","code":"gfonts::get_all_fonts()$family |>   unlist() |>   unique() |>   sort() gfonts::get_all_fonts()$subsets |> unlist() |> unique() |> sort()"},{"path":"https://davidgohel.github.io/gdtools/reference/install_gfont_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shell command to install a font from 'Google Fonts' — install_gfont_script","text":"'shell' 'PowerShell' command string","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/install_gfont_script.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shell command to install a font from 'Google Fonts' — install_gfont_script","text":"allows users use fonts 'Google Fonts' HTML page generated 'shiny' 'R Markdown'. first request, font files downloaded stored cache user's machine, thus avoiding many useless downloads allowing work fonts afterwards without Internet connection, docker image example. See fonts_cache_dir(). server delivering font files busy. one second pause added download respect server's limits. time can set option GFONTS_DOWNLOAD_SLEEPTIME must number seconds.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/install_gfont_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shell command to install a font from 'Google Fonts' — install_gfont_script","text":"","code":"if (FALSE) { # \\dontrun{ if (check_gfonts()) {   dummy_setup()   install_gfont_script(family = \"Roboto\", platform = \"macos\") } } # }"},{"path":"https://davidgohel.github.io/gdtools/reference/installed_gfonts.html","id":null,"dir":"Reference","previous_headings":"","what":"List installed 'Google Fonts' — installed_gfonts","title":"List installed 'Google Fonts' — installed_gfonts","text":"List installed 'Google Fonts' can found user cache directory.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/installed_gfonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List installed 'Google Fonts' — installed_gfonts","text":"","code":"installed_gfonts()"},{"path":"https://davidgohel.github.io/gdtools/reference/installed_gfonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List installed 'Google Fonts' — installed_gfonts","text":"families names character vector","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/installed_gfonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List installed 'Google Fonts' — installed_gfonts","text":"","code":"if (FALSE) { # \\dontrun{ if (check_gfonts()) {   dummy_setup()   register_gfont(family = \"Roboto\")   installed_gfonts() } } # }"},{"path":"https://davidgohel.github.io/gdtools/reference/liberationsansHtmlDependency.html","id":null,"dir":"Reference","previous_headings":"","what":"'Liberation Sans' Font HTML dependency — liberationsansHtmlDependency","title":"'Liberation Sans' Font HTML dependency — liberationsansHtmlDependency","text":"Create HTML dependency ready used 'Shiny' 'R Markdown' 'Liberation Sans' Font.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/liberationsansHtmlDependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Liberation Sans' Font HTML dependency — liberationsansHtmlDependency","text":"","code":"liberationsansHtmlDependency()"},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/m_str_extents.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute string extents for a vector of string. — m_str_extents","title":"Compute string extents for a vector of string. — m_str_extents","text":"x element, determines width height bounding box big enough (just) enclose provided text. Unit pixel.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/m_str_extents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute string extents for a vector of string. — m_str_extents","text":"","code":"m_str_extents(   x,   fontname = \"sans\",   fontsize = 10,   bold = FALSE,   italic = FALSE,   fontfile = NULL )"},{"path":"https://davidgohel.github.io/gdtools/reference/m_str_extents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute string extents for a vector of string. — m_str_extents","text":"x Character vector strings measure fontname Font name. vector character match x. fontsize Font size. vector numeric match x. bold, italic text bold/italic?. vector logical match x. fontfile Font file. vector character match x.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/m_str_extents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute string extents for a vector of string. — m_str_extents","text":"","code":"# \\donttest{ # The first run can be slow when font caches are missing # as font files are then being scanned to build those font caches. m_str_extents(letters, fontsize = 1:26) #>            [,1]       [,2] #>  [1,]  0.612793  0.5742188 #>  [2,]  1.269531  1.5478516 #>  [3,]  1.649414  1.7226562 #>  [4,]  2.539062  3.0957031 #>  [5,]  3.076172  2.8710938 #>  [6,]  2.112305  4.5585938 #>  [7,]  4.443359  5.3764648 #>  [8,]  5.070312  6.0781250 #>  [9,]  2.500488  6.8378906 #> [10,]  2.778320  9.6777344 #> [11,]  6.370117  8.3574219 #> [12,]  3.333984  9.1171875 #> [13,] 12.663574  7.2807617 #> [14,]  8.873047  7.8408203 #> [15,]  9.177246  8.6132812 #> [16,] 10.156250 12.2890625 #> [17,] 10.791016 13.0571289 #> [18,]  7.400391 10.0810547 #> [19,]  9.898926 10.9101562 #> [20,]  7.841797 14.0429688 #> [21,] 13.309570 12.0585938 #> [22,] 13.019531 12.0312500 #> [23,] 18.811035 12.5781250 #> [24,] 14.203125 13.1250000 #> [25,] 14.794922 18.8720703 #> [26,] 13.647461 14.2187500 m_str_extents(letters[1:3],   bold = c(TRUE, FALSE, TRUE),   italic = c(FALSE, TRUE, TRUE),   fontname = c(\"sans\", \"sans\", \"sans\") ) #>          [,1]     [,2] #> [1,] 6.748047 5.742188 #> [2,] 6.347656 7.739258 #> [3,] 5.927734 5.742188 # }"},{"path":"https://davidgohel.github.io/gdtools/reference/match_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Find best family match with systemfonts — match_family","title":"Find best family match with systemfonts — match_family","text":"match_family() returns best font family match.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/match_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find best family match with systemfonts — match_family","text":"","code":"match_family(font = \"sans\", bold = TRUE, italic = TRUE, debug = NULL)"},{"path":"https://davidgohel.github.io/gdtools/reference/match_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find best family match with systemfonts — match_family","text":"font family face match. bold Wheter match font featuring bold face. italic Wheter match font featuring italic face. debug deprecated","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/match_family.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find best family match with systemfonts — match_family","text":"","code":"match_family(\"sans\") #> [1] \"DejaVu Sans\" match_family(\"serif\") #> [1] \"DejaVu Serif\""},{"path":"https://davidgohel.github.io/gdtools/reference/raster_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw/preview a raster into a string — raster_str","title":"Draw/preview a raster into a string — raster_str","text":"raster_view helper function testing. uses htmltools render png image base64 encoded data image.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/raster_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw/preview a raster into a string — raster_str","text":"","code":"raster_str(x, width = 480, height = 480, interpolate = FALSE)  raster_view(code)"},{"path":"https://davidgohel.github.io/gdtools/reference/raster_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw/preview a raster into a string — raster_str","text":"x raster object width, height Width height pixels. interpolate logical value indicating whether linearly interpolate image. code base64 code raster","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/raster_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw/preview a raster into a string — raster_str","text":"","code":"r <- as.raster(matrix(hcl(0, 80, seq(50, 80, 10)),  nrow = 4, ncol = 5)) code <- raster_str(r, width = 50, height = 50) if (interactive() && require(\"htmltools\")) {   raster_view(code = code) }"},{"path":"https://davidgohel.github.io/gdtools/reference/raster_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw/preview a raster to a png file — raster_write","title":"Draw/preview a raster to a png file — raster_write","text":"Draw/preview raster png file","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/raster_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw/preview a raster to a png file — raster_write","text":"","code":"raster_write(x, path, width = 480, height = 480, interpolate = FALSE)"},{"path":"https://davidgohel.github.io/gdtools/reference/raster_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw/preview a raster to a png file — raster_write","text":"x raster object path name file create width, height Width height pixels. interpolate logical value indicating whether linearly interpolate image.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/raster_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw/preview a raster to a png file — raster_write","text":"","code":"r <- as.raster(matrix(hcl(0, 80, seq(50, 80, 10)),  nrow = 4, ncol = 5)) filepng <- tempfile(fileext = \".png\") raster_write(x = r, path = filepng, width = 50, height = 50)"},{"path":"https://davidgohel.github.io/gdtools/reference/register_gfont.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a 'Google Fonts' — register_gfont","title":"Register a 'Google Fonts' — register_gfont","text":"Register font 'Google Fonts' can used devices using 'systemfonts' package, .e. 'flextable' package graphic outputs generated 'ragg', 'svglite' 'ggiraph' packages.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/register_gfont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a 'Google Fonts' — register_gfont","text":"","code":"register_gfont(family = \"Open Sans\", subset = c(\"latin\", \"latin-ext\"))"},{"path":"https://davidgohel.github.io/gdtools/reference/register_gfont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a 'Google Fonts' — register_gfont","text":"family family name 'Google Fonts', example, \"Open Sans\", \"Roboto\", \"Fira Code\" \"Fira Sans Condensed\". Complete list available following command:   subset font subset, character vector, defaults \"latin\" \"latin-ext\" can contains values \"greek\", \"emoji\", \"chinese-traditional\", Run following code get complete list:","code":"gfonts::get_all_fonts()$family |>   unlist() |>   unique() |>   sort() gfonts::get_all_fonts()$subsets |> unlist() |> unique() |> sort()"},{"path":"https://davidgohel.github.io/gdtools/reference/register_gfont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a 'Google Fonts' — register_gfont","text":"TRUE operation went ok.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/register_gfont.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a 'Google Fonts' — register_gfont","text":"allows users use fonts 'Google Fonts' HTML page generated 'shiny' 'R Markdown'. first request, font files downloaded stored cache user's machine, thus avoiding many useless downloads allowing work fonts afterwards without Internet connection, docker image example. See fonts_cache_dir(). server delivering font files busy. one second pause added download respect server's limits. time can set option GFONTS_DOWNLOAD_SLEEPTIME must number seconds.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/register_gfont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a 'Google Fonts' — register_gfont","text":"","code":"if (FALSE) { # \\dontrun{ if (check_gfonts()) {   dummy_setup()   register_gfont(family = \"Roboto\") } } # }"},{"path":"https://davidgohel.github.io/gdtools/reference/register_liberationsans.html","id":null,"dir":"Reference","previous_headings":"","what":"Register font 'Liberation Sans' — register_liberationsans","title":"Register font 'Liberation Sans' — register_liberationsans","text":"Register font 'Liberation Sans' can used devices using 'systemfonts' package, .e. 'flextable' package graphic outputs generated 'ragg', 'svglite' 'ggiraph' packages.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/register_liberationsans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register font 'Liberation Sans' — register_liberationsans","text":"","code":"register_liberationsans()"},{"path":"https://davidgohel.github.io/gdtools/reference/register_liberationsans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register font 'Liberation Sans' — register_liberationsans","text":"TRUE operation went ok.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/reference/set_dummy_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and unset a minimalistic Fontconfig configuration — set_dummy_conf","title":"Set and unset a minimalistic Fontconfig configuration — set_dummy_conf","text":"Set unset minimalistic Fontconfig configuration","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/set_dummy_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and unset a minimalistic Fontconfig configuration — set_dummy_conf","text":"","code":"set_dummy_conf()  unset_dummy_conf()"},{"path":"https://davidgohel.github.io/gdtools/reference/set_dummy_conf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set and unset a minimalistic Fontconfig configuration — set_dummy_conf","text":"Fontconfig used anymore functions deprecated next release.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/str_extents.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute string extents. — str_extents","title":"Compute string extents. — str_extents","text":"Determines width height bounding box big enough (just) enclose provided text.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/str_extents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute string extents. — str_extents","text":"","code":"str_extents(   x,   fontname = \"sans\",   fontsize = 12,   bold = FALSE,   italic = FALSE,   fontfile = \"\" )"},{"path":"https://davidgohel.github.io/gdtools/reference/str_extents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute string extents. — str_extents","text":"x Character vector strings measure fontname Font name fontsize Font size bold, italic text bold/italic? fontfile Font file","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/str_extents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute string extents. — str_extents","text":"","code":"str_extents(letters) #>            [,1]      [,2] #>  [1,]  7.353516  6.890625 #>  [2,]  7.617188  9.287109 #>  [3,]  6.597656  6.890625 #>  [4,]  7.617188  9.287109 #>  [5,]  7.382812  6.890625 #>  [6,]  4.224609  9.117188 #>  [7,]  7.617188  9.216797 #>  [8,]  7.605469  9.117188 #>  [9,]  3.333984  9.117188 #> [10,]  3.333984 11.613281 #> [11,]  6.949219  9.117188 #> [12,]  3.333984  9.117188 #> [13,] 11.689453  6.720703 #> [14,]  7.605469  6.720703 #> [15,]  7.341797  6.890625 #> [16,]  7.617188  9.216797 #> [17,]  7.617188  9.216797 #> [18,]  4.933594  6.720703 #> [19,]  6.251953  6.890625 #> [20,]  4.705078  8.425781 #> [21,]  7.605469  6.890625 #> [22,]  7.101562  6.562500 #> [23,]  9.814453  6.562500 #> [24,]  7.101562  6.562500 #> [25,]  7.101562  9.058594 #> [26,]  6.298828  6.562500 str_extents(\"Hello World!\", bold = TRUE, italic = FALSE,   fontname = \"sans\", fontsize = 12) #>         [,1]     [,2] #> [1,] 84.4043 9.287109"},{"path":"https://davidgohel.github.io/gdtools/reference/str_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get font metrics for a string. — str_metrics","title":"Get font metrics for a string. — str_metrics","text":"Get font metrics string.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/str_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get font metrics for a string. — str_metrics","text":"","code":"str_metrics(   x,   fontname = \"sans\",   fontsize = 12,   bold = FALSE,   italic = FALSE,   fontfile = \"\" )"},{"path":"https://davidgohel.github.io/gdtools/reference/str_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get font metrics for a string. — str_metrics","text":"x Character vector strings measure fontname Font name fontsize Font size bold, italic text bold/italic? fontfile Font file","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/str_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get font metrics for a string. — str_metrics","text":"named numeric vector","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/str_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get font metrics for a string. — str_metrics","text":"","code":"str_metrics(\"Hello World!\") #>      width     ascent    descent  #> 74.1328125  9.1171875  0.1699219"},{"path":"https://davidgohel.github.io/gdtools/reference/sys_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"List fonts for 'systemfonts'. — sys_fonts","title":"List fonts for 'systemfonts'. — sys_fonts","text":"List system registryfonts details data.frame containing columns foundry, family, file, slant weight.","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/sys_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List fonts for 'systemfonts'. — sys_fonts","text":"","code":"sys_fonts()"},{"path":"https://davidgohel.github.io/gdtools/reference/sys_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List fonts for 'systemfonts'. — sys_fonts","text":"","code":"sys_fonts() #> # A tibble: 129 × 6 #>    path                                         index family style weight italic #>    <chr>                                        <int> <chr>  <chr> <ord>  <lgl>  #>  1 /usr/share/fonts/type1/urw-base35/URWGothic…     0 URW G… Book… normal FALSE  #>  2 /usr/share/fonts/truetype/lato/Lato-ThinIta…     0 Lato   Thin… ultra… TRUE   #>  3 /usr/share/fonts/truetype/liberation/Libera…     0 Liber… Bold  bold   FALSE  #>  4 /usr/share/fonts/truetype/lato/Lato-Semibol…     0 Lato   Semi… semib… TRUE   #>  5 /usr/share/fonts/type1/urw-base35/NimbusMon…     0 Nimbu… Bold… bold   TRUE   #>  6 /usr/share/fonts/truetype/liberation/Libera…     0 Liber… Bold  bold   FALSE  #>  7 /usr/share/fonts/opentype/urw-base35/Nimbus…     0 Nimbu… Bold… bold   TRUE   #>  8 /usr/share/fonts/type1/urw-base35/NimbusRom…     0 Nimbu… Regu… normal FALSE  #>  9 /usr/share/fonts/truetype/lato/Lato-MediumI…     0 Lato   Medi… medium TRUE   #> 10 /usr/share/fonts/type1/urw-base35/NimbusRom…     0 Nimbu… Ital… normal TRUE   #> # ℹ 119 more rows"},{"path":"https://davidgohel.github.io/gdtools/reference/version_cairo.html","id":null,"dir":"Reference","previous_headings":"","what":"Version numbers of C libraries — version_freetype","title":"Version numbers of C libraries — version_freetype","text":"version_cairo() version_freetype() return runtime version. helpers return version objects packageVersion().","code":""},{"path":"https://davidgohel.github.io/gdtools/reference/version_cairo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Version numbers of C libraries — version_freetype","text":"","code":"version_freetype()  version_cairo()"},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"gdtools 0.4.0","text":"Move ‘gfonts’ ‘curl’ ‘Suggests’ dependencies can used ‘webR’.","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-037","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.7","title":"gdtools 0.3.7","text":"CRAN release: 2024-03-05","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"issues-0-3-7","dir":"Changelog","previous_headings":"","what":"Issues","title":"gdtools 0.3.7","text":"fix htmlDependancy Liberation Sans","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-036","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.6","title":"gdtools 0.3.6","text":"CRAN release: 2024-02-22","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"changes-0-3-6","dir":"Changelog","previous_headings":"","what":"Changes","title":"gdtools 0.3.6","text":"update ‘Google Fonts’ font database","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-035","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.5","title":"gdtools 0.3.5","text":"CRAN release: 2023-12-09","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"issues-0-3-5","dir":"Changelog","previous_headings":"","what":"Issues","title":"gdtools 0.3.5","text":"fix -Wformat-security issue r-devel","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"new-features-0-3-5","dir":"Changelog","previous_headings":"","what":"New features","title":"gdtools 0.3.5","text":"install_gfont_script() can now directly generate script file ready executed install ‘Google Font’, use argument file.","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-034","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.4","title":"gdtools 0.3.4","text":"CRAN release: 2023-10-15","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"changes-0-3-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"gdtools 0.3.4","text":"update libcairo 1.18 use dontrun macro avoid CRAN errors","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-033","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.3","title":"gdtools 0.3.3","text":"CRAN release: 2023-03-27","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"issues-0-3-3","dir":"Changelog","previous_headings":"","what":"Issues","title":"gdtools 0.3.3","text":"calls gfonts::get_all_fonts(). enable usage access website used ‘gfonts’.","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-032","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.2","title":"gdtools 0.3.2","text":"CRAN release: 2023-03-13","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"gdtools 0.3.2","text":"new function installed_gfonts() list installed font ‘Google’","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-031","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.1","title":"gdtools 0.3.1","text":"CRAN release: 2023-02-17","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"gdtools 0.3.1","text":"add ‘liberation-sans’ fallback -line","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-030","dir":"Changelog","previous_headings":"","what":"gdtools 0.3.0","title":"gdtools 0.3.0","text":"CRAN release: 2023-01-15","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"gdtools 0.3.0","text":"package now allows download work Google Fonts thanks ‘gfonts’ ‘systemfonts’ package. useful managing fonts graphics produced ‘ragg’, ‘svglite’ ‘ggiraph’ also ‘flextable’ tables. Finally, possible easily embed fonts HTML documents.","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-024","dir":"Changelog","previous_headings":"","what":"gdtools 0.2.4","title":"gdtools 0.2.4","text":"CRAN release: 2022-02-14 Windows: add support ucrt toolchains","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-023","dir":"Changelog","previous_headings":"","what":"gdtools 0.2.3","title":"gdtools 0.2.3","text":"CRAN release: 2021-01-06 fixes configure script M1 mac solaris","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-022","dir":"Changelog","previous_headings":"","what":"gdtools 0.2.2","title":"gdtools 0.2.2","text":"CRAN release: 2020-04-03 Small tweaks configure script","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-021","dir":"Changelog","previous_headings":"","what":"gdtools 0.2.1","title":"gdtools 0.2.1","text":"CRAN release: 2019-10-14","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"issues-0-2-1","dir":"Changelog","previous_headings":"","what":"issues","title":"gdtools 0.2.1","text":"Change font_family_exists check family exists family column returned systemfonts::system_fonts() fix memory leak","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-020","dir":"Changelog","previous_headings":"","what":"gdtools 0.2.0","title":"gdtools 0.2.0","text":"CRAN release: 2019-09-03 refactor - package now using package systemfonts instead using fontconfig locate fonts file","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-019","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.9","title":"gdtools 0.1.9","text":"CRAN release: 2019-06-18 keep locale intact using various gdtools functions (fix #51) Reuse magick FONTCONFIG_PATH exists","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-018","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.8","title":"gdtools 0.1.8","text":"CRAN release: 2019-04-02 Windows: update cairo stack rwinlib/cairo v1.15.10","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-016","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.6","title":"gdtools 0.1.6","text":"CRAN release: 2017-09-01 update Rcpp 0.12.12 new function glyphs_match test whether glyphs strings existing font table .","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-015","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.5","title":"gdtools 0.1.5","text":"CRAN release: 2017-08-08 increase tolerance font metrics unit-tests new version freetype slightly changing returned extents.","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-014","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.4","title":"gdtools 0.1.4","text":"CRAN release: 2017-03-17 New file src/registerDynamicSymbol.c correctly register provided routines cleanup file delete src/Makevars package built","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-013","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.3","title":"gdtools 0.1.3","text":"CRAN release: 2016-11-11 Add set_dummy_conf() unset_dummy_conf() set minimalistic Fontconfig configuration. Useful speed cache building Appveyor CRAN. skip tests need fontquiver installed.","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-012","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.2","title":"gdtools 0.1.2","text":"CRAN release: 2016-11-06 Fix crash Linux platforms (hadley/svglite#80)","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-011","dir":"Changelog","previous_headings":"","what":"gdtools 0.1.1","title":"gdtools 0.1.1","text":"CRAN release: 2016-11-01","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"updates-0-1-1","dir":"Changelog","previous_headings":"","what":"updates","title":"gdtools 0.1.1","text":"examples sys_fonts match_family marked donttest first run can slow font caches existing.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"new-functions-0-1-0","dir":"Changelog","previous_headings":"","what":"new functions","title":"gdtools 0.1.0","text":"sys_fonts: get system fonts details. font_family_exists: test given font family name can matched exactly match_family: find best family match given Fontconfig pattern match_font: returns font information given Fontconfig pattern base64_string_export: encode string base64 version_cairo: runtime version Cairo library version_freetype: runtime version FreeType library version_fontconfig: compile-time version Fontconfig library","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"updates-0-1-0","dir":"Changelog","previous_headings":"","what":"updates","title":"gdtools 0.1.0","text":"CONFIGURE file updated Homebrew new repo (Jeroen Ooms) GPL-3 license file added CairoContext now uses Fontconfig find system fonts CairoContext now supports user-defined font files","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-007","dir":"Changelog","previous_headings":"","what":"gdtools 0.0.7","title":"gdtools 0.0.7","text":"CRAN release: 2016-02-16 Fix let OS X Snow Leopard produce binaries (Jeroen Ooms)","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-006","dir":"Changelog","previous_headings":"","what":"gdtools 0.0.6","title":"gdtools 0.0.6","text":"CRAN release: 2015-11-25 Fix prevent OSX CRAN builder linking old libs /usr/local/lib (Jeroen Ooms)","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-005","dir":"Changelog","previous_headings":"","what":"gdtools 0.0.5","title":"gdtools 0.0.5","text":"CRAN release: 2015-11-12 new function raster_write write raster object png file usage testthat","code":""},{"path":"https://davidgohel.github.io/gdtools/news/index.html","id":"gdtools-004","dir":"Changelog","previous_headings":"","what":"gdtools 0.0.4","title":"gdtools 0.0.4","text":"CRAN release: 2015-10-28 Fix Mavericks CRAN builder (Jeroen Ooms) Fix solaris CRAN builder (Jeroen Ooms)","code":""}]
